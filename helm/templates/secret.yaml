{{- $postgresqlServiceName := include "postgresql.fullname" . -}}
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Release.Name }}
  labels:
    app.kubernetes.io/name: {{ .Release.Name }}
    app.kubernetes.io/part-of: {{ .Release.Name }}
    helm.sh/chart: {{ include "OpenZaakBrug.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
type: Opaque
stringData:
  application.properties-kubernetes: |
    logging.level.nl.haarlem={{ .Values.config.debug }}

    openzaak.jwt.secret={{ .Values.config.openzaak.jwt.secret }}
    openzaak.jwt.issuer={{ .Values.config.openzaak.jwt.issuer }}
    openzaak.baseUrl = {{ .Values.config.openzaak.baseUrl }}

    nl.haarlem.translations.zdstozgw.trustAllCerts = {{ .Values.config.trustAllCertificates }}

    nl.haarlem.translations.zdstozgw.enableJWTEntpoint = {{ .Values.config.enableJwtEndpoint }}

    nl.haarlem.translations.zdstozgw.timeoffset.minutes = -5

    #openzaak endpoints
    zgw.endpoint.roltype = {{ .Values.config.openzaak.endpoints.rolTypen }}
    zgw.endpoint.rol = {{ .Values.config.openzaak.endpoints.rollen }}
    zgw.endpoint.zaaktype = {{ .Values.config.openzaak.endpoints.zaakTypen }}
    zgw.endpoint.status = {{ .Values.config.openzaak.endpoints.statussen }}
    zgw.endpoint.statustype = {{ .Values.config.openzaak.endpoints.statusTypen }}
    zgw.endpoint.zaakinformatieobject = {{ .Values.config.openzaak.endpoints.zaakInformatieObjecten }}
    zgw.endpoint.enkelvoudiginformatieobject = {{ .Values.config.openzaak.endpoints.enkelvoudigInformatieObjecten }}
    zgw.endpoint.zaak = {{ .Values.config.openzaak.endpoints.zaken }}


    spring.jpa.generate-ddl=true
    spring.jpa.open-in-view=true
    spring.datasource.initialization-mode=always

    ## Postgresql
    spring.datasource.driverClassName=org.postgresql.Driver
    spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
    spring.datasource.url= {{ printf "jdbc:postgresql://%s/%s" $postgresqlServiceName .Values.postgresql.postgresqlDatabase }}
    spring.datasource.username={{ .Values.postgresql.postgresqlUsername }}
    spring.datasource.password={{ .Values.postgresql.postgresqlPassword }}

    version=@version@
    ladybug.maxCheckpoints=2500
    ladybug.maxMemoryUsage=100000000
    ladybug.maxMessageLength=1000000
    ladybug.regexFilter=.*
    ladybug.reportTransformation=transform-ladybug-report.xslt
